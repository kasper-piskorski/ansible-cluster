---
- name: Create neo4j log and local directories
  file: path={{item}} state=directory owner={{user_name}} group={{group_name}} mode=755
  with_items:
    - "{{cluster_home}}/neo4j"
    - "{{log_home}}/neo4j"

- stat: path={{ cluster_home }}/{{ neo4j_tarball_name }}
  register: neo4j_tarball

#- name: Fetch neo4j package
  #get_url: dest={{ cluster_home }}/{{ neo4j_tarball_name }} url={{neo4j_dropbox_link}}
  #when: neo4j_tarball.stat.exists == False

- name: copy neo4j tarball
  copy: dest={{cluster_home}} src={{neo4j_tarball_name}} owner={{user_name}} group={{group_name}} mode=755 

- name: Uncompress the neo4j tar
  unarchive: copy=no  dest={{cluster_home}} src="{{cluster_home}}/{{neo4j_tarball_name}}" owner={{user_name}} group={{group_name}}
  
- name: Remove neo4j tar
  file: path="{{cluster_home}}/{{neo4j_tarball_name}}" state=absent

- name: Mv to server
  command: mv {{cluster_home}}/neo4j-enterprise-{{neo4j_version}} {{cluster_home}}/neo4j/server
  when: neo4j_deploy_ha_mode == False

- name: Set neo4j server dir
  set_fact: neo4j_server_dir="{{cluster_home}}/neo4j/server"
  when: neo4j_deploy_ha_mode == False

#for HA mode
- name: Cp server
  #copy: recurse=yes dest={{cluster_home}}/neo4j/{{item}} src={{cluster_home}}/neo4j/server
  command: cp -r {{cluster_home}}/neo4j-enterprise-{{neo4j_version}} {{cluster_home}}/neo4j/{{item}}
  when: neo4j_deploy_ha_mode == True
  with_items:
     - "{{neo4j_local_ha_server_names}}"

- name: Remove neo4j unpack dir
  file: path="{{cluster_home}}/neo4j-enterprise-{{neo4j_version}}" state=absent
  #command: rm -rf {{cluster_home}}/neo4j-enterprise-{{neo4j_version}}
  when: neo4j_deploy_ha_mode == True

#### Configuration ####
- include: configure_neo4j.yml
  when: (neo4j_deploy_ha_mode == False )

# Neo4j HA configure
- include: configure_neo4j_ha.yml
  when: (neo4j_deploy_ha_mode == True )

